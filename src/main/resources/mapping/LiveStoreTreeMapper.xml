<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.live.dao.LiveStoreTreeMapper" >
  <resultMap id="BaseResultMap" type="com.live.model.LiveStoreTree" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="store_pid" property="store_pid" jdbcType="INTEGER" />
    <result column="store_id" property="store_id" jdbcType="INTEGER" />
    <result column="relation" property="relation" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="store_no" property="store_no" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    store_pid, store_id, relation, `status`, store_no
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.live.model.LiveStoreTreeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from live_store_tree
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.live.model.LiveStoreTreeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from live_store_tree
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.live.model.LiveStoreTree" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into live_store_tree (store_pid, store_id, relation, 
      `status`, store_no)
    values (#{store_pid,jdbcType=INTEGER}, #{store_id,jdbcType=INTEGER}, #{relation,jdbcType=INTEGER}, 
      #{status,jdbcType=CHAR}, #{store_no,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.live.model.LiveStoreTree" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into live_store_tree
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="store_pid != null" >
        store_pid,
      </if>
      <if test="store_id != null" >
        store_id,
      </if>
      <if test="relation != null" >
        relation,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="store_no != null" >
        store_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="store_pid != null" >
        #{store_pid,jdbcType=INTEGER},
      </if>
      <if test="store_id != null" >
        #{store_id,jdbcType=INTEGER},
      </if>
      <if test="relation != null" >
        #{relation,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="store_no != null" >
        #{store_no,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.live.model.LiveStoreTreeExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from live_store_tree
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update live_store_tree
    <set >
      <if test="record.store_pid != null" >
        store_pid = #{record.store_pid,jdbcType=INTEGER},
      </if>
      <if test="record.store_id != null" >
        store_id = #{record.store_id,jdbcType=INTEGER},
      </if>
      <if test="record.relation != null" >
        relation = #{record.relation,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.store_no != null" >
        store_no = #{record.store_no,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update live_store_tree
    set store_pid = #{record.store_pid,jdbcType=INTEGER},
      store_id = #{record.store_id,jdbcType=INTEGER},
      relation = #{record.relation,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=CHAR},
      store_no = #{record.store_no,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>